package analisador;

import java.io.*;
import java.lang.*;
import java_cup.runtime.*;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.*;
import analisador.Yylex;

parser code
{:
    private Symbol s;  //s recebe o Symbol da classe Symbol
    
    public static void main(String args[]) throws Exception{
    //    new Parser (new Yylex(System.in)).parse();
    }
    
    public void syntax_error(Symbol s){
        this.s = s; //recebe simbolo que deu erro        
    }

    //metodo para pegar o "s"
    public Symbol getS(){
        return this.s;
}
:};

terminal OP_SOMA, OP_SUBTRACAO, OP_MULTIPLICACAO, OP_DIVISAO, OP_EXPONENCIACAO, OP_MOD, OP_LOGICO, OP_NEGACAO, OP_RELACIONAL, OP_IGUAL, OP_DIFERENTE, OP_BOOLEANO, ABRE_PARENTESES, FECHA_PARENTESES, ABRE_COLCHETES, FECHA_COLCHETES, PONTO_VIRGULA, VIRGULA, COMENTARIO, PRINCIPAL, FIM, FUNCAO, FUNCAO_FIM, SE, SE_FIM, ESE, ESE_FIM, SENAO, SENAO_FIM, REPETICAO, REPETICAO_FIM, ENQUANTO, ENQUANTO_FIM, ESCREVA, LEIA, RETORNA, IDENTIFICADOR, STRING, INTEIRO, REAL;


non terminal programa, funcoes, operacoes, comandos, condicional, condicional_composta, condicao, imprime, escaneia, chamada, atribuicao, comandos_logicos, comandos_relacionais, expressao, expressao_result, incremento, decremento, retorno, numeros, vetor, vetor_inteiro, vetor_real, vetor_string, parametro, loop, loop_repeticao, loop_enquanto, iterador, iterador_digito, iterador_variavel;

precedence left OP_SOMA, OP_SUBTRACAO;
precedence left OP_MULTIPLICACAO, OP_DIVISAO;
precedence left OP_EXPONENCIACAO, OP_MOD;

start with programa;

//Estrutura programa
programa ::= PRINCIPAL operacoes FIM 
        |  funcoes PRINCIPAL operacoes FIM
        ;	

funcoes ::= FUNCAO chamada operacoes FUNCAO_FIM funcoes 
       | FUNCAO chamada operacoes FUNCAO_FIM
       ;

operacoes ::= comandos 
         | operacoes comandos 
         | condicional
         | operacoes condicional
         | loop 
         | operacoes loop
         | expressao
         ;

comandos ::= imprime 
        | escaneia 
        | atribuicao 
        | chamada
        | retorno
        | incremento
        | decremento
        | COMENTARIO
        ;

//Estruturas condicionais
condicional ::= SE ABRE_COLCHETES condicao FECHA_COLCHETES operacoes SE_FIM 
                   | SE ABRE_COLCHETES condicao FECHA_COLCHETES operacoes SE_FIM condicional_composta
                   ;

condicional_composta ::= ESE ABRE_COLCHETES condicao FECHA_COLCHETES operacoes ESE_FIM 
                    | ESE ABRE_COLCHETES condicao FECHA_COLCHETES operacoes ESE_FIM condicional_composta
                    | SENAO operacoes SENAO_FIM
                    ;

condicao ::= comandos_relacionais 
        | comandos_logicos
        ;


//Comandos executaveis
imprime ::= ESCREVA expressao
       | ESCREVA chamada
       ;

escaneia ::= LEIA IDENTIFICADOR
        ;

chamada ::= IDENTIFICADOR ABRE_PARENTESES parametro FECHA_PARENTESES 
       | IDENTIFICADOR ABRE_PARENTESES FECHA_PARENTESES
       ;

atribuicao ::= IDENTIFICADOR ABRE_PARENTESES numeros FECHA_PARENTESES 
          | IDENTIFICADOR ABRE_PARENTESES OP_BOOLEANO FECHA_PARENTESES 
          | IDENTIFICADOR ABRE_PARENTESES STRING FECHA_PARENTESES 
          | IDENTIFICADOR ABRE_PARENTESES vetor FECHA_PARENTESES
          ;

comandos_logicos ::= comandos_relacionais OP_LOGICO comandos_relacionais 
                | comandos_relacionais OP_NEGACAO OP_LOGICO comandos_relacionais 
                | OP_NEGACAO comandos_relacionais
                | comandos_relacionais OP_LOGICO comandos_relacionais OP_LOGICO condicao
                ;

comandos_relacionais ::=  expressao_result 
                    ;

expressao_result ::= expressao OP_IGUAL IDENTIFICADOR
                | expressao OP_IGUAL numeros
                | expressao OP_RELACIONAL IDENTIFICADOR
                | expressao OP_RELACIONAL numeros
                | expressao OP_DIFERENTE IDENTIFICADOR
                | expressao OP_DIFERENTE numeros
                | expressao OP_IGUAL OP_BOOLEANO
                | expressao OP_IGUAL STRING
                | expressao OP_DIFERENTE STRING
                ; 

expressao ::= expressao OP_SOMA expressao
        | expressao OP_SUBTRACAO expressao
        | expressao OP_MULTIPLICACAO expressao
        | expressao OP_DIVISAO expressao
        | expressao OP_EXPONENCIACAO expressao
        | expressao OP_MOD expressao
        | ABRE_PARENTESES expressao FECHA_PARENTESES
        | numeros
        | IDENTIFICADOR
        | STRING     
        ;

incremento ::=  IDENTIFICADOR OP_SOMA OP_SOMA
          ;

decremento ::= IDENTIFICADOR OP_SUBTRACAO OP_SUBTRACAO
          ;

retorno ::= RETORNA IDENTIFICADOR
       | RETORNA STRING
       | RETORNA numeros
       | RETORNA OP_BOOLEANO
       ;

//Estrutura de dados
numeros ::= INTEIRO 
       | REAL
       ;

vetor ::= vetor_inteiro 
     | vetor_real 
     | vetor_string
     ;

vetor_inteiro ::= INTEIRO VIRGULA INTEIRO 
             | INTEIRO VIRGULA vetor_inteiro
             ;

vetor_real ::= REAL VIRGULA REAL 
          | REAL VIRGULA vetor_real
          ;

vetor_string ::= STRING VIRGULA STRING 
            | STRING VIRGULA vetor_string
            ;

parametro ::= IDENTIFICADOR 
         | IDENTIFICADOR VIRGULA parametro
         ; 

//Estruturas de repeticao
loop ::= loop_repeticao 
    | loop_enquanto
    ;
 
loop_repeticao ::= REPETICAO ABRE_COLCHETES iterador FECHA_COLCHETES operacoes REPETICAO_FIM
              ;
 
loop_enquanto ::= ENQUANTO ABRE_COLCHETES condicao FECHA_COLCHETES operacoes ENQUANTO_FIM;

iterador ::= iterador_digito 
        | iterador_variavel
        ;

//trocar numero por inteiro
iterador_digito ::= IDENTIFICADOR ABRE_PARENTESES INTEIRO FECHA_PARENTESES PONTO_VIRGULA IDENTIFICADOR OP_RELACIONAL INTEIRO PONTO_VIRGULA incremento 
               | IDENTIFICADOR ABRE_PARENTESES INTEIRO FECHA_PARENTESES PONTO_VIRGULA IDENTIFICADOR OP_RELACIONAL INTEIRO PONTO_VIRGULA decremento
               ;

iterador_variavel ::= IDENTIFICADOR ABRE_PARENTESES INTEIRO FECHA_PARENTESES PONTO_VIRGULA IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PONTO_VIRGULA incremento 
                 | IDENTIFICADOR ABRE_PARENTESES INTEIRO FECHA_PARENTESES PONTO_VIRGULA IDENTIFICADOR OP_RELACIONAL IDENTIFICADOR PONTO_VIRGULA decremento
                 ;
