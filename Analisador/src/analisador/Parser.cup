package analisador;

import java.io.*;
import java.lang.*;
import java_cup.runtime.*;
import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java.util.*;
import analisador.Yylex;

parser code
{:
    private Symbol s;  //s recebe o Symbol da classe Symbol
    
    public static void main(String args[]) throws Exception{
    //    new Parser (new Yylex(System.in)).parse();
    }
    
    public void syntax_error(Symbol s){
        this.s = s; //recebe simbolo que deu erro        
    }

    //metodo para pegar o "s"
    public Symbol getS(){
        return this.s;
}
:};

terminal LINHA, OP_ARITMETICO, OP_SOMA, OP_SUBTRACAO, OPERADOR_LOGICO, OP_RELACIONAL, OP_COMPARACAO, OP_BOOLEANO, ABRE_PARENTESES, FECHA_PARENTESES, ABRE_COLCHETES, FECHA_COLCHETES, PONTO_VIRGULA, DOIS_PONTOS, VIRGULA, PONTO, ASPAS_DUPLAS, ASPAS_SIMPLES,  COMENTARIO, PRINCIPAL, FIM, FUNCAO, FUNCAO_FIM, SE, SE_FIM, ESE, ESE_FIM, SENAO, SENAO_FIM, REPETICAO, REPETICAO_FIM, ENQUANTO, ENQUANTO_FIM, ESCREVA, LEIA, RETORNA, IDENTIFICADOR, INTEIRO, REAL, ERROR;


non terminal programa, funcoes, operacoes, comandos, atribuicao, condicional, condicional_simples, condicional_composta, condicao, imprime, escaneia, loop;

start with programa;

//Estrutura programa
programa ::= PRINCIPAL operacoes FIM | funcoes PRINCIPAL operacoes FIM;	

funcoes ::= funcoes FUNCAO IDENTIFICADOR ABRE_PARENTESES parametro FECHA_PARENTESES operacoes FUNCAO_FIM | FUNCAO IDENTIFICADOR ABRE_PARENTESES parametro FECHA_PARENTESES operacoes FUNCAO_FIM;

operacoes ::= comandos | comandos operacoes | condicional | loop;

comandos ::= ;

//Estruturas condicionais
condicional ::= condicional_simples | condicional_simples condicional; 

condicional_simples ::= SE CONDICAO operacoes SE_FIM | SE CONDICAO operacoes SE_FIM condicional_composta;

condicional_composta ::= ESE CONDICAO operacoes ESE_FIM | ESE CONDICAO operacoes ESE_FIM condicional_composta| SENAO operacoes SENAO_FIM;

condicao ::= VARIAVEL OP_RELACIONAL VARIAVEL| VARIAVEL OP_RELACIONAL NUMERO | VARIAVEL OP_RELACIONAL numeros | VARIAVEL OP_RELACIONAL OP_BOOLEANO | VARIAVEL OP_RELACIONAL string;


//Comandos executaveis
imprime ::= ESCREVA VARIAVEL | ESCREVA STRING | ESCREVA NUMERO;

escaneia ::= LEIA INTEIRO | LEIA STRING | LEIA REAL;

comandos_logicos ::= CONDICAO OP_LOGICO CONDICAO | CONDICAO OP_NEGACAO CONDICAO | OP_NEGACAO CONDICAO;

atribuicao ::= ABRE_PARENTESES numeros FECHA_PARENTESES | IDENTIFICADOR ABRE_PARENTESES OP_BOOLEANO FECHA_PARENTESES | IDENTIFICADOR ABRE_PARENTESES STRING FECHA_PARENTESES | IDENTIFICADOR ABRE_PARENTESES vetor FECHA_PARENTESES;

comandos_relacionais ::= 
	VARIAVEL OP_RELACIONAL VARIAVEL | VARIAVEL OP_RELACIONAL NUMERO |
	VARIAVEL OP_IGUAL VARIAVEL | VARIAVEL OP_IGUAL NUMERO | VARIAVEL OP_IGUAL OP_BOOLEANO | 
    VARIAVEL OP_DIFERENTE VARIAVEL |VARIAVEL OP_DIFERENTE NUMERO;

comandos_aritmeticos ::= 
	VARIAVEL OP_ARITMETICO VARIAVEL | VARIAVEL OP_ARITMETICO NUMERO |
	VARIAVEL OP_SOMA VARIAVEL | VARIAVEL OP_SOMA NUMERO |
	VARIAVEL OP_SUBTRACAO VARIAVEL | VARIAVEL OP_SUBTRACAO NUMERO |
	string OP_SOMA string | string OP_SOMA VARIAVEL |
	VARIAVEL OP_SOMA string;


//Estrutura de dados
numeros ::= INTEIRO | REAL;

vetor ::= vetor_inteiro | vetor_real | vetor_string;

vetor_inteiro ::= INTEIRO VIRGULA INTEIRO | INTEIRO VIRGULA vetor_inteiro;

vetor_real ::= REAL VIRGULA REAL | REAL VIRGULA vetor_real;

vetor_string ::= string VIRGULA string | string VIRGULA vetor_string;

string ::= ASPAS_DUPLAS IDENTIFICADOR ASPAS_DUPLAS | ASPAS_SIMPLES IDENTIFICADOR ASPAS_SIMPLES;

variavel ::= IDENTIFICADOR atribuicao;

parametro ::= IDENTIFICADOR | IDENTIFICADOR VIRGULA parametro; 

//Estruturas de repeticao
loop ::= loop_repeticao | loop_enquanto;
 
loop_repeticao ::= REPETICAO ABRE_COLCHETES iterador FECHA_COLCHETES operacoes REPETICAO_FIM | REPETICAO ABRE_COLCHETES iterador FECHA_COLCHETES comandos REPETICAO_FIM;
 
loop_enquanto ::= ENQUANTO ABRE_COLCHETES condicao FECHA_COLCHETES operacoes ENQUANTO_FIM | ENQUANTO ABRE_COLCHETES condicao FECHA_COLCHETES comandos ENQUANTO_FIM;

iterador ::= iterador_digito | iterador_variavel;

//trocar numero por inteiro
iterador_digito ::= VARIAVEL ABRE_PARENTESES NUMERO FECHA_PARENTESES PONTO_VIRGULA VARIAVEL OP_RELACIONAL NUMERO PONTO_VIRGULA VARIAVEL OP_SOMA OP_SOMA | VARIAVEL ABRE_PARENTESES NUMERO FECHA_PARENTESES PONTO_VIRGULA VARIAVEL OP_RELACIONAL NUMERO PONTO_VIRGULA VARIAVEL OP_SUBTRACAO OP_SUBTRACAO;

iterador_variavel ::= VARIAVEL ABRE_PARENTESES NUMERO FECHA_PARENTESES PONTO_VIRGULA VARIAVEL OP_RELACIONAL VARIAVEL PONTO_VIRGULA VARIAVEL OP_SOMA OP_SOMA | VARIAVEL ABRE_PARENTESES NUMERO FECHA_PARENTESES PONTO_VIRGULA VARIAVEL OP_RELACIONAL VARIAVEL PONTO_VIRGULA VARIAVEL OP_SUBTRACAO OP_SUBTRACAO;
